name: Build_jellyfin-china
on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 6 * *"
  #push:
  #branches: [ master ]
  # Publish semver tags as releases.
  #tags: [ 'v*.*.*' ]
  #pull_request:
  #branches: [ master ]

env:
  #REGISTRY: ghcr.io
  REGISTRY: docker.io
  NAME: jellyfin-china
  ARCH: linux/amd64,  linux/arm64
  DESCRIPTION: Jellyfin, with modifed hosts file

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}
          #username: ${{ github.actor }}
          #password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DH_USERNAME }}/${{ env.NAME }}
          tags: |
            type=raw, value=latest

      - name: DNS Lookup and Format
        id: dns_lookup
        run: |
          CHINA_DNSSERVER="202.46.34.75"
          DOMAIN_LIST=("api.themoviedb.org" "image.tmdb.org" "api.thetvdb.org" "www.omdbapi.com")
          FORMATTED_HOSTS=""

          for domain in "${DOMAIN_LIST[@]}"; do
            ip=$(nslookup "$domain" "$CHINA_DNSSERVER" | awk '/^Address: / { print $2 }' | head -n 1)
            if [ -n "$ip" ]; then
              FORMATTED_HOSTS+="${domain}:${ip},"
            fi
          done

          # Remove the trailing comma
          FORMATTED_HOSTS=$(echo "$FORMATTED_HOSTS" | sed 's/,$//')

          echo "FORMATTED_HOSTS=${FORMATTED_HOSTS}" >> $GITHUB_ENV
          echo "${FORMATTED_HOSTS}"


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.NAME }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.ARCH }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          add-hosts: ${{ env.FORMATTED_HOSTS }}

      - name: Available platforms
        run: echo ${{ steps.build-and-push.outputs.platforms }}

      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DH_USERNAME }}
          DOCKER_PASS: ${{ secrets.DH_PASSWORD }}
        with:
          destination_container_repo: ${{ secrets.DH_USERNAME }}/${{ env.NAME }}
          provider: dockerhub
          short_description: ${{ env.DESCRIPTION }}
          readme_file: "${{ env.NAME }}/README.md"
